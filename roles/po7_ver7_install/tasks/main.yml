---

- name: Make main recursive directory(PO7)
  file: path=/{{ user }}/automation/{{ item }} state=directory
  with_items:
    - po7
- name: Make docker binary directory
  file: path=/{{ user }}/automation/initial/{{ item }} state=directory
  with_items:
    - docker_binary

# setting docker install shell & update & install docker 
- name: Copy docker install shell centos
  copy: src=docker_install_centos.sh dest=/{{ user }}/automation/initial/docker_install.sh owner={{ user }} mode=0755
  when: ansible_distribution == "CentOS"

- name: Copy docker install shell on ubuntu
  copy: src=docker_install_ubuntu.sh dest=/{{ user }}/automation/initial/docker_install.sh owner={{ user }} mode=0755
  when: ansible_distribution == "Ubuntu"

- name: Execute docker install shell <update & install docker>
  shell: /{{ user }}/automation/initial/docker_install.sh 2>&1 | tee /{{ user }}/automation/log/progress


# setting modified docker binaries
- name: Copy modified docker binaries
  copy: src=binary/docker_binary.tar dest=/{{ user }}/automation/initial/docker_binary.tar owner={{ user }} mode=0755
  when: ansible_distribution == "Ubuntu"

- name: Copy unarchive_setting.sh
  copy: src=unarchive_setting.sh dest=/{{ user }}/automation/initial owner={{ user }} mode=0755
  when: ansible_distribution == "Ubuntu"

- name: Unarchive docker binary tar & modify
  shell: /{{ user }}/automation/initial/unarchive_setting.sh 2>&1 >> /{{ user }}/automation/log/progress
  when: ansible_distribution == "Ubuntu"

# setting po7 tar file
- name: Copy po7 tar
  copy: src=binary/{{ po_image_name }}.tar dest=/{{ user }}/automation/po7/{{ po_image_name }}.tar owner={{ user }} mode=0644
- name: Copy proobject tar
  copy: src=binary/proobject7.tar.gz dest=/{{ user }}/automation/po7/proobject7.tar.gz owner={{ user }} mode=0644

# unzip po7 tar file
#- name: Unzip po7 tar file
#  unarchive:
#    src: /{{ user }}/automation/po7/proobject7.tar.gz
#    dest: /{{ user }}/automation/po7

# untar proobject7.tar.gz
- name: copy untar proobject7 shell script
  copy: src=untar_po7.sh dest=/{{ user }}/automation/po7 owner={{ user }} mode=0755
  
- name: untar proobject7.tar.gz
  shell: /{{ user }}/automation/po7/untar_po7.sh 2>&1 >> /{{ user }}/automation/log/progress

# copy po7 runtime binary
#- name: copy po7 runtime binary
#  copy: src=binary/proobject-runtime-war-7.0.0.0.273.war dest=/{{ user }}/automation/po7/proobject7/po7.war owner={{ user }} mode=0755

- name: copy po7 runtime binary
  copy: src=binary/{{ poruntime }}.war dest=/{{ user }}/automation/po7/proobject7/po7.war owner={{ user }} mode=0755
  
#- name: Setting po7 log directory

# copy po7 log file
- name: Copy po7 log file
  copy: src=logs/ dest=/{{ user }}/automation/po7/proobject7/ owner={{ user }} mode=0755 

# setting po7 log directory
- name: Setting po7 log directory
  file: path=/{{ user }}/automation/po7/po7log/ state=directory owner={{ user }} mode=0755
